@page "/products"
@inject DataStoreService dataStoreService

<h3>Products</h3>

<EditForm Model="@newProduct" OnValidSubmit="AddProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="productNumber">Product Number:</label>
        <InputText id="productNumber" class="form-control" @bind-Value="newProduct.ProductNumber" />
    </div>
    <div class="form-group">
        <label for="productName">Product Name:</label>
        <InputText id="productName" class="form-control" @bind-Value="newProduct.ProductName" />
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <InputNumber id="price" class="form-control" @bind-Value="newProduct.Price" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Add product</button>
</EditForm>

@if (products != null && products.Count > 0)
{
    <table class="table">
    <thead>
        <tr>
            <th>Product Number</th>
            <th>Product Name</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
            {
                <tr>
                    <td>@product.ProductNumber</td>
                    <td>@product.ProductName</td>
                    <td>@product.Price</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteProduct(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>There are no products available.</p>
}

@code {

    private Product newProduct = new Product();

    private void AddProduct()
    {
        dataStoreService.AddProduct(newProduct);
        newProduct = new Product(); // Rensa formul√§ret
    }
    private List<Product> products = new List<Product>();

    protected override void OnInitialized()
    {
        products = dataStoreService.GetProducts();
    }

    private void DeleteProduct(int id)
    {
        dataStoreService.DeleteProduct(id);
        products = dataStoreService.GetProducts();
    }
}